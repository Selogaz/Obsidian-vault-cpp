{
	"nodes":[
		{"id":"59b4d835cc676868","type":"group","x":-1320,"y":-540,"width":1880,"height":1200,"label":"Eisenhower Matrix"},
		{"id":"9b0483f8d05ef46a","type":"text","text":"\r\nDelegate\r\n","x":-717,"y":-142,"width":250,"height":60},
		{"id":"ad5442392d51f526","type":"text","text":"> [!important] Do\n> ```tasks\n> not done \n> tags include priority/a\n> group by function \\\n>   task.tags \\\n>     .filter(tag => tag.includes(\"#category/\")) \\\n>     .map(tag => \"[[\" + tag.split(\"/\")[1].replace(\"_\", \" \") + \"]]\")\n> sort by function \\\n>   let dateStr = task.happens ? task.happens.format(\"YYYY-MM-DD\") : \"9999-99-99\"; \\\n>   let m = task.description && task.description.match(/⏰\\s*(\\d{1,2}:\\d{2})/); \\\n>   let timeStr = m ? (m[1].length == 4 ? \"0\" + m[1] : m[1]) : \"99:99\"; \\\n>   return dateStr + \"T\" + timeStr;\n> hide task count\n> hide tags\n> ```\n","x":-1300,"y":-520,"width":920,"height":580},
		{"id":"2ea27390433d2fe1","type":"text","text":"> [!Failure] Eliminate\n> ```tasks\n> not done \n> tags include priority/e\n> group by function \\\n>   task.tags \\\n>     .filter(tag => tag.includes(\"#category/\")) \\\n>     .map(tag => \"[[\" + tag.split(\"/\")[1].replace(\"_\", \" \") + \"]]\")\n> sort by function \\\n>   let dateStr = task.happens ? task.happens.format(\"YYYY-MM-DD\") : \"9999-99-99\"; \\\n>   let m = task.description && task.description.match(/⏰\\s*(\\d{1,2}:\\d{2})/); \\\n>   let timeStr = m ? (m[1].length == 4 ? \"0\" + m[1] : m[1]) : \"99:99\"; \\\n>   return dateStr + \"T\" + timeStr;\n> hide task count\n> hide tags\n> ```","x":-380,"y":60,"width":920,"height":580},
		{"id":"bebeb0f35febb4d4","type":"text","text":"> [!help] Delegate\n> ```tasks\n> not done \n> (tags include priority/d) OR (tags include task/waiting_for)\n> group by function \\\n>   task.tags \\\n>     .filter(tag => tag.includes(\"#category/\")) \\\n>     .map(tag => \"[[\" + tag.split(\"/\")[1].replace(\"_\", \" \") + \"]]\")\n> group by function \\\n>   if (task.tags.includes(\"#priority/d\"))           return \"%%01%% - 🇩 Delegate\"; \\\n>   if (task.tags.includes(\"#task/waiting_for\"))     return \"%%02%% - 💤 Waiting\"; \\\n>   return \"%%99%%\";\n> sort by function \\\n>   let dateStr = task.happens ? task.happens.format(\"YYYY-MM-DD\") : \"9999-99-99\"; \\\n>   let m = task.description && task.description.match(/⏰\\s*(\\d{1,2}:\\d{2})/); \\\n>   let timeStr = m ? (m[1].length == 4 ? \"0\" + m[1] : m[1]) : \"99:99\"; \\\n>   return dateStr + \"T\" + timeStr;\n> hide task count\n> hide tags\n> ```","x":-1300,"y":60,"width":920,"height":580},
		{"id":"28dee846dd0f5803","type":"text","text":"> [!attention] Schedule\n> ```tasks\n> not done \n> (tags include priority/b) OR (tags include priority/c)\n> group by function \\\n>   task.tags \\\n>     .filter(tag => tag.includes(\"#category/\")) \\\n>     .map(tag => \"[[\" + tag.split(\"/\")[1].replace(\"_\", \" \") + \"]]\")\n> group by function \\\n>   if (task.tags.includes(\"#priority/b\"))         return \"%%01%% - 🇧 Important, non-urgent\"; \\\n>   if (task.tags.includes(\"#priority/c\"))         return \"%%02%% - 🇨 Сommon task\"; \\\n>   return \"%%99%%\";\n> sort by function \\\n>   let dateStr = task.happens ? task.happens.format(\"YYYY-MM-DD\") : \"9999-99-99\"; \\\n>   let m = task.description && task.description.match(/⏰\\s*(\\d{1,2}:\\d{2})/); \\\n>   let timeStr = m ? (m[1].length == 4 ? \"0\" + m[1] : m[1]) : \"99:99\"; \\\n>   return dateStr + \"T\" + timeStr;\n> hide task count\n> hide tags\n> ```","x":-380,"y":-520,"width":920,"height":580}
	],
	"edges":[]
}