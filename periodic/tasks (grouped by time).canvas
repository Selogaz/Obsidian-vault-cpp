{
	"nodes":[
		{"id":"34c23d251b95291d","type":"group","x":-480,"y":-1580,"width":2100,"height":1020,"label":"Time estimation"},
		{"id":"c86c4ebfa9031c3f","type":"text","text":"\n> [!note|hide-icon] 🤏 quick (t ⪅ 15 min)\n> ```tasks\n> not done \n> tags include time/quick\n> group by function \\\n>   task.tags \\\n>     .filter(tag => tag.includes(\"#category/\")) \\\n>     .map(tag => \"[[\" + tag.split(\"/\")[1].replace(\"_\", \" \") + \"]]\")\n> sort by function \\\n>   let dateStr = task.happens ? task.happens.format(\"YYYY-MM-DD\") : \"9999-99-99\"; \\\n>   let m = task.description && task.description.match(/⏰\\s*(\\d{1,2}:\\d{2})/); \\\n>   let timeStr = m ? (m[1].length == 4 ? \"0\" + m[1] : m[1]) : \"99:99\"; \\\n>   return dateStr + \"T\" + timeStr;\n> hide task count\n> hide tags\n> ```","x":-460,"y":-1560,"width":500,"height":980},
		{"id":"fb4c73ae870d59aa","type":"text","text":"\n> [!note|hide-icon] 🐰 moderate (15min < t < 2 hours)\n> ```tasks\n> not done \n> tags include time/moderate\n> group by function \\\n>   task.tags \\\n>     .filter(tag => tag.includes(\"#category/\")) \\\n>     .map(tag => \"[[\" + tag.split(\"/\")[1].replace(\"_\", \" \") + \"]]\")\n> sort by function \\\n>   let dateStr = task.happens ? task.happens.format(\"YYYY-MM-DD\") : \"9999-99-99\"; \\\n>   let m = task.description && task.description.match(/⏰\\s*(\\d{1,2}:\\d{2})/); \\\n>   let timeStr = m ? (m[1].length == 4 ? \"0\" + m[1] : m[1]) : \"99:99\"; \\\n>   return dateStr + \"T\" + timeStr;\n> hide task count\n> hide tags\n> ```","x":60,"y":-1560,"width":500,"height":980},
		{"id":"0e10360e5b405658","type":"text","text":"\n> [!note|hide-icon] 🐢 lengthy (2 hours ⪅ t < 5 hours)\n> ```tasks\n> not done \n> tags include time/lengthy\n> group by function \\\n>   task.tags \\\n>     .filter(tag => tag.includes(\"#category/\")) \\\n>     .map(tag => \"[[\" + tag.split(\"/\")[1].replace(\"_\", \" \") + \"]]\")\n> sort by function \\\n>   let dateStr = task.happens ? task.happens.format(\"YYYY-MM-DD\") : \"9999-99-99\"; \\\n>   let m = task.description && task.description.match(/⏰\\s*(\\d{1,2}:\\d{2})/); \\\n>   let timeStr = m ? (m[1].length == 4 ? \"0\" + m[1] : m[1]) : \"99:99\"; \\\n>   return dateStr + \"T\" + timeStr;\n> hide task count\n> hide tags\n> ```","x":580,"y":-1560,"width":500,"height":980},
		{"id":"1f6f4cf11a4dbe80","type":"text","text":"\n> [!note|hide-icon] 🐌 long (t ⪆ 5 hours)\n> ```tasks\n> not done \n> tags include time/long\n> group by function \\\n>   task.tags \\\n>     .filter(tag => tag.includes(\"#category/\")) \\\n>     .map(tag => \"[[\" + tag.split(\"/\")[1].replace(\"_\", \" \") + \"]]\")\n> sort by function \\\n>   let dateStr = task.happens ? task.happens.format(\"YYYY-MM-DD\") : \"9999-99-99\"; \\\n>   let m = task.description && task.description.match(/⏰\\s*(\\d{1,2}:\\d{2})/); \\\n>   let timeStr = m ? (m[1].length == 4 ? \"0\" + m[1] : m[1]) : \"99:99\"; \\\n>   return dateStr + \"T\" + timeStr;\n> hide task count\n> hide tags\n> ```","x":1100,"y":-1560,"width":500,"height":980}
	],
	"edges":[]
}