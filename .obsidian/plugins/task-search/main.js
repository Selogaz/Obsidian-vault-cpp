/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var p=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var b=Object.getOwnPropertyNames;var x=Object.prototype.hasOwnProperty;var f=(i,n)=>{for(var e in n)p(i,e,{get:n[e],enumerable:!0})},g=(i,n,e,t)=>{if(n&&typeof n=="object"||typeof n=="function")for(let s of b(n))!x.call(i,s)&&s!==e&&p(i,s,{get:()=>n[s],enumerable:!(t=m(n,s))||t.enumerable});return i};var C=i=>g(p({},"__esModule",{value:!0}),i);var E={};f(E,{default:()=>d});module.exports=C(E);var c=require("obsidian"),k=class extends c.Modal{constructor(e){super(e);this.app=e;this.selectedTaskIndex=-1;this.tasks=[];this.filteredTasks=[];this.debounceTimer=null}onOpen(){var s;let{contentEl:e,modalEl:t}=this;(s=t.querySelector(".modal-close-button"))==null||s.remove(),t.addClass("task-search-modal"),this.createSearchContainer(e),this.createResultsContainer(e),this.getTasks().then(()=>{this.input.focus()})}onClose(){this.contentEl.empty()}createSearchContainer(e){let t=e.createEl("div",{cls:"search-container"});this.completedTasksCheckbox=this.createCompletedTasksCheckbox(t),this.input=this.createSearchInput(t),this.taskCountLabel=t.createEl("div",{cls:"task-count-label",text:"0 tasks"})}createCompletedTasksCheckbox(e){let t=e.createEl("input",{type:"checkbox",cls:"completed-tasks-checkbox"});t.id="completed-tasks-checkbox",t.addEventListener("change",()=>this.debouncedSearch());let s=e.createEl("label");return s.htmlFor=t.id,t}createSearchInput(e){let t=e.createEl("input",{type:"text",placeholder:"Enter text to search...",cls:"full-width-input"});return t.addEventListener("input",()=>this.debouncedSearch()),t.addEventListener("keydown",s=>this.handleKeyDown(s)),t}createResultsContainer(e){this.resultsContainer=e.createEl("div")}debouncedSearch(){this.debounceTimer&&clearTimeout(this.debounceTimer),this.debounceTimer=setTimeout(()=>this.searchTasks(),300)}async searchTasks(){let e=this.input.value.toLowerCase(),t=this.completedTasksCheckbox.checked;if(e.trim()===""){this.resetSearch();return}this.filteredTasks=this.tasks.filter(s=>{let a=s.text.toLowerCase().includes(e),l=t?s.completed:!s.completed;return a&&l}),this.renderResults(),this.taskCountLabel.setText(`${this.filteredTasks.length} tasks`),this.selectedTaskIndex=this.filteredTasks.length>0?0:-1,this.highlightSelectedTask()}resetSearch(){this.resultsContainer.empty(),this.taskCountLabel.setText("0 tasks"),this.selectedTaskIndex=-1,this.filteredTasks=[]}renderResults(){this.resultsContainer.empty();let e=document.createDocumentFragment();this.filteredTasks.forEach((t,s)=>{let a=this.createTaskElement(t,s);e.appendChild(a)}),this.resultsContainer.appendChild(e)}createTaskElement(e,t){let s=document.createElement("div");s.className="task-item";let a=this.createTaskText(e),l=this.createTaskCheckbox(e);return s.appendChild(l),s.appendChild(a),s.addEventListener("click",r=>{r.target.className!=="task-checkbox"&&(this.selectedTaskIndex=t,this.openSelectedTask())}),s}createTaskText(e){let t=document.createElement("span");return t.className=e.completed?"task-completed":"task-text",t.innerHTML=this.formatTaskText(e.text,e.isSubtask),t}createTaskCheckbox(e){let t=document.createElement("input");return t.type="checkbox",t.className="task-checkbox",t.checked=e.completed,t.addEventListener("change",s=>this.handleTaskCompletion(s,e)),t}formatTaskText(e,t){return(t?"\u2935 ":"")+e.replace(/#\S+/g,"").replace(/\[([^\]]+)\]\(([^)]+)\)/g,"\u{1F310} <span class='link'> $1 </span>").replace(/\[\[([^\|]+)\|([^\]]+)\]\]/g,"\u{1F517} <span class='link'> $2 </span>").replace(/\[\[([^\]]+)\]\]/g,"\u{1F517} <span class='link'> $1 </span>").trim()}async handleTaskCompletion(e,t){e.stopPropagation();let s=e.target;t.completed=s.checked;let a=this.app.vault.getAbstractFileByPath(t.filePath);if(a instanceof c.TFile){let r=await this.app.vault.read(a),o=this.updateTaskInContent(r,t);await this.app.vault.modify(a,o)}let l=s.nextElementSibling;l.className=t.completed?"task-completed":"task-text",this.renderResults()}updateTaskInContent(e,t){let s=e.split(`
`);return s[t.lineNumber-1]=t.completed?s[t.lineNumber-1].replace(/^(\s*)-\s*\[ \]/,"$1- [x]"):s[t.lineNumber-1].replace(/^(\s*)-\s*\[x\]/,"$1- [ ]"),s.join(`
`)}async getTasks(){this.tasks=[];let e=this.app.vault.getMarkdownFiles();for(let t of e){let s=await this.getTasksFromFile(t);this.tasks.push(...s)}}async getTasksFromFile(e){var l,r;let t=[],a=(await this.app.vault.cachedRead(e)).split(`
`);for(let o=0;o<a.length;o++){let h=a[o],u=/^\s*-\s*\[x\]/.test(h);if(/^\s*-\s*\[ \]/.test(h)||u){let T=(((r=(l=h.match(/^\s*/))==null?void 0:l[0])==null?void 0:r.length)||0)>0;t.push({text:h.replace(/^\s*-\s*\[x\]|\s*-\s*\[ \]/,"").trim(),completed:u,filePath:e.path,lineNumber:o+1,isSubtask:T})}}return t}handleKeyDown(e){switch(!0){case(e.ctrlKey&&(e.key==="l"||e.code==="KeyL")):e.preventDefault(),this.toggleCompletedTasks();break;case(e.key==="ArrowDown"||e.ctrlKey&&e.code==="KeyJ"):e.preventDefault(),this.selectNextTask();break;case(e.key==="ArrowUp"||e.ctrlKey&&e.code==="KeyK"):e.preventDefault(),this.selectPreviousTask();break;case e.key==="Enter":e.preventDefault(),e.stopPropagation(),this.openSelectedTask();break}}toggleCompletedTasks(){this.completedTasksCheckbox.checked=!this.completedTasksCheckbox.checked,this.debouncedSearch()}selectNextTask(){this.filteredTasks.length!==0&&(this.selectedTaskIndex=(this.selectedTaskIndex+1)%this.filteredTasks.length,this.highlightSelectedTask())}selectPreviousTask(){this.filteredTasks.length!==0&&(this.selectedTaskIndex=(this.selectedTaskIndex-1+this.filteredTasks.length)%this.filteredTasks.length,this.highlightSelectedTask())}highlightSelectedTask(){this.resultsContainer.querySelectorAll(".task-item").forEach((t,s)=>{t.toggleClass("selected",s===this.selectedTaskIndex)})}async openSelectedTask(){if(this.selectedTaskIndex>=0&&this.selectedTaskIndex<this.filteredTasks.length){let e=this.filteredTasks[this.selectedTaskIndex],t=this.app.vault.getAbstractFileByPath(e.filePath);t instanceof c.TFile?(await this.app.workspace.openLinkText(t.path,t.path,!1),this.close(),this.focusOnTask(e)):console.error("File not found:",e.filePath)}}focusOnTask(e){setTimeout(()=>{var s;let t=(s=this.app.workspace.getActiveViewOfType(c.MarkdownView))==null?void 0:s.editor;t&&(t.setCursor({line:e.lineNumber-1,ch:e.text.length}),t.focus())},100)}},d=class extends c.Plugin{onload(){this.addCommand({id:"open-task-search-modal",name:"Open Task Search Modal",callback:()=>{new k(this.app).open()}})}};
