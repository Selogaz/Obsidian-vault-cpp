{
  "recentFiles": [
    {
      "basename": "Список книг",
      "path": "sources/Список книг.md"
    },
    {
      "basename": "index",
      "path": "home/index.md"
    },
    {
      "basename": "Основные интерфейсы JCF и их реализации",
      "path": "base/notes/Основные интерфейсы JCF и их реализации.md"
    },
    {
      "basename": "Основные свойства красно-чёрных деревьев",
      "path": "base/notes/Основные свойства красно-чёрных деревьев.md"
    },
    {
      "basename": "К2",
      "path": "base/notes/К2.md"
    },
    {
      "basename": "вечером",
      "path": "base/notes/вечером.md"
    },
    {
      "basename": "Альтернативы для Spring",
      "path": "base/notes/Альтернативы для Spring.md"
    },
    {
      "basename": "внедрение зависимостей через сеттеры",
      "path": "base/notes/внедрение зависимостей через сеттеры.md"
    },
    {
      "basename": "Общий алгоритм формирования заметок",
      "path": "base/notes/Общий алгоритм формирования заметок.md"
    },
    {
      "basename": "внедрение зависимостей через конструктор",
      "path": "base/notes/внедрение зависимостей через конструктор.md"
    },
    {
      "basename": "run-time data areas",
      "path": "base/notes/run-time data areas.md"
    },
    {
      "basename": "throws",
      "path": "base/notes/throws.md"
    },
    {
      "basename": "try-catch-finally",
      "path": "base/notes/try-catch-finally.md"
    },
    {
      "basename": "Преимущества полиморфизма",
      "path": "base/notes/Преимущества полиморфизма.md"
    },
    {
      "basename": "иерархия исключений",
      "path": "base/notes/иерархия исключений.md"
    },
    {
      "basename": "weak references",
      "path": "base/notes/weak references.md"
    },
    {
      "basename": "Клонировать объект",
      "path": "base/notes/Клонировать объект.md"
    },
    {
      "basename": "Полиморфная переменная и функция",
      "path": "base/notes/Полиморфная переменная и функция.md"
    },
    {
      "basename": "Почему хэш код в виде 31 * x + y предпочтительнее чем x + y",
      "path": "base/notes/Почему хэш код в виде 31 * x + y предпочтительнее чем x + y.md"
    },
    {
      "basename": "Альтернативные способы клонирования объектов",
      "path": "base/notes/Альтернативные способы клонирования объектов.md"
    },
    {
      "basename": "внедрение зависимостей через интерфейс",
      "path": "base/notes/внедрение зависимостей через интерфейс.md"
    },
    {
      "basename": "Можно ли реализовать метод equals() класса MyClass вот так",
      "path": "base/notes/Можно ли реализовать метод equals() класса MyClass вот так.md"
    },
    {
      "basename": "static nested class",
      "path": "base/notes/static nested class.md"
    },
    {
      "basename": "зачем нужен сборщик мусора",
      "path": "base/notes/зачем нужен сборщик мусора.md"
    },
    {
      "basename": "GC Root",
      "path": "base/notes/GC Root.md"
    },
    {
      "basename": "java типы памяти в jvm",
      "path": "base/notes/java типы памяти в jvm.md"
    },
    {
      "basename": "java BeanFactory",
      "path": "base/notes/java BeanFactory.md"
    },
    {
      "basename": "java контейнер бинов",
      "path": "base/notes/java контейнер бинов.md"
    },
    {
      "basename": "java слой бизнес-логики",
      "path": "base/notes/java слой бизнес-логики.md"
    },
    {
      "basename": "java aop pointcut",
      "path": "base/notes/java aop pointcut.md"
    },
    {
      "basename": "java equals()",
      "path": "base/notes/java equals().md"
    },
    {
      "basename": "generics",
      "path": "base/notes/generics.md"
    },
    {
      "basename": "java механизм сборки мусора",
      "path": "base/notes/java механизм сборки мусора.md"
    },
    {
      "basename": "java приведение типов",
      "path": "base/notes/java приведение типов.md"
    },
    {
      "basename": "Exceptions",
      "path": "base/notes/Exceptions.md"
    },
    {
      "basename": "доступ к внешнему классу из внутреннего",
      "path": "base/notes/доступ к внешнему классу из внутреннего.md"
    },
    {
      "basename": "reference counting",
      "path": "base/notes/reference counting.md"
    },
    {
      "basename": "инициализация static, nonstatic",
      "path": "base/notes/инициализация static, nonstatic.md"
    },
    {
      "basename": "может ли equals() возвращать false у ссылок на один объект",
      "path": "base/notes/может ли equals() возвращать false у ссылок на один объект.md"
    },
    {
      "basename": "модификаторы доступа",
      "path": "base/notes/модификаторы доступа.md"
    },
    {
      "basename": "отличия JVM, JRE и JDK",
      "path": "base/notes/отличия JVM, JRE и JDK.md"
    },
    {
      "basename": "логические операторы",
      "path": "base/notes/логические операторы.md"
    },
    {
      "basename": "маркерные интерфейсы",
      "path": "base/notes/маркерные интерфейсы.md"
    },
    {
      "basename": "перегрузка метода",
      "path": "base/notes/перегрузка метода.md"
    },
    {
      "basename": "наследование",
      "path": "base/notes/наследование.md"
    },
    {
      "basename": "мета-заметка",
      "path": "base/notes/мета-заметка.md"
    },
    {
      "basename": "класс, абстрактный класс или интерфейс",
      "path": "base/notes/класс, абстрактный класс или интерфейс.md"
    },
    {
      "basename": "модификация метода при переопределении",
      "path": "base/notes/модификация метода при переопределении.md"
    },
    {
      "basename": "одновременное указание static и abstract",
      "path": "base/notes/одновременное указание static и abstract.md"
    },
    {
      "basename": "объект",
      "path": "base/notes/объект.md"
    },
    {
      "basename": "основные принципы ООП",
      "path": "base/notes/основные принципы ООП.md"
    },
    {
      "basename": "интерфейс",
      "path": "base/notes/интерфейс.md"
    },
    {
      "basename": "локализация кода в одном месте",
      "path": "base/notes/локализация кода в одном месте.md"
    },
    {
      "basename": "класс",
      "path": "base/notes/класс.md"
    },
    {
      "basename": "исключение при ошибке в блоке",
      "path": "base/notes/исключение при ошибке в блоке.md"
    },
    {
      "basename": "недостатки ООП",
      "path": "base/notes/недостатки ООП.md"
    },
    {
      "basename": "литералы",
      "path": "base/notes/литералы.md"
    },
    {
      "basename": "модульность и параллелизм",
      "path": "base/notes/модульность и параллелизм.md"
    },
    {
      "basename": "красно-черное дерево",
      "path": "base/notes/красно-черное дерево.md"
    },
    {
      "basename": "инкапсуляция",
      "path": "base/notes/инкапсуляция.md"
    },
    {
      "basename": "особенности String",
      "path": "base/notes/особенности String.md"
    },
    {
      "basename": "особенности использования внутренних классов",
      "path": "base/notes/особенности использования внутренних классов.md"
    },
    {
      "basename": "переменные среды",
      "path": "base/notes/переменные среды.md"
    },
    {
      "basename": "ключевое слово interface",
      "path": "base/notes/ключевое слово interface.md"
    },
    {
      "basename": "куркумин",
      "path": "base/notes/куркумин.md"
    },
    {
      "basename": "корень крапивы",
      "path": "base/notes/корень крапивы.md"
    },
    {
      "basename": "медь",
      "path": "base/notes/медь.md"
    },
    {
      "basename": "пиперин",
      "path": "base/notes/пиперин.md"
    },
    {
      "basename": "лецитин",
      "path": "base/notes/лецитин.md"
    },
    {
      "basename": "магний",
      "path": "base/notes/магний.md"
    },
    {
      "basename": "модификатор abstract",
      "path": "base/notes/модификатор abstract.md"
    },
    {
      "basename": "как принудительно выбросить исключение",
      "path": "base/notes/как принудительно выбросить исключение.md"
    },
    {
      "basename": "можно ли так реализовать equals()",
      "path": "base/notes/можно ли так реализовать equals().md"
    },
    {
      "basename": "интерфейс Cloneable",
      "path": "base/notes/интерфейс Cloneable.md"
    },
    {
      "basename": "может ли main() выбросить исключение вовне и где оно будет обработано",
      "path": "base/notes/может ли main() выбросить исключение вовне и где оно будет обработано.md"
    },
    {
      "basename": "может ли equals() возвращать true у разных объектов",
      "path": "base/notes/может ли equals() возвращать true у разных объектов.md"
    },
    {
      "basename": "клонирование класса с полем изменяемого ссылочного типа",
      "path": "base/notes/клонирование класса с полем изменяемого ссылочного типа.md"
    },
    {
      "basename": "конструктор копирования",
      "path": "base/notes/конструктор копирования.md"
    },
    {
      "basename": "наиболее предпочтительный способ клонирования",
      "path": "base/notes/наиболее предпочтительный способ клонирования.md"
    },
    {
      "basename": "передача переменных в методы",
      "path": "base/notes/передача переменных в методы.md"
    },
    {
      "basename": "конструктор по умолчанию",
      "path": "base/notes/конструктор по умолчанию.md"
    },
    {
      "basename": "расширенная кодировка символов",
      "path": "base/notes/расширенная кодировка символов.md"
    },
    {
      "basename": "побитовые операции",
      "path": "base/notes/побитовые операции.md"
    },
    {
      "basename": "тернарный оператор",
      "path": "base/notes/тернарный оператор.md"
    },
    {
      "basename": "позволяет абстрагироваться",
      "path": "base/notes/позволяет абстрагироваться.md"
    },
    {
      "basename": "статический метод и переопределение",
      "path": "base/notes/статический метод и переопределение.md"
    },
    {
      "basename": "пример полиморфизма от ИИ",
      "path": "base/notes/пример полиморфизма от ИИ.md"
    },
    {
      "basename": "статический блок инициализации",
      "path": "base/notes/статический блок инициализации.md"
    },
    {
      "basename": "статическое или раннее связывание",
      "path": "base/notes/статическое или раннее связывание.md"
    },
    {
      "basename": "сужение области видимости при переопределении",
      "path": "base/notes/сужение области видимости при переопределении.md"
    },
    {
      "basename": "java SOLID",
      "path": "base/notes/java SOLID.md"
    },
    {
      "basename": "является и имеет в ООП",
      "path": "base/notes/является и имеет в ООП.md"
    },
    {
      "basename": "получение доступа к переопределенным методам родительского класса",
      "path": "base/notes/получение доступа к переопределенным методам родительского класса.md"
    },
    {
      "basename": "статический метод генерации",
      "path": "base/notes/статический метод генерации.md"
    },
    {
      "basename": "полиморфизм",
      "path": "base/notes/полиморфизм.md"
    },
    {
      "basename": "База знаний fill the gaps",
      "path": "sources/База знаний fill the gaps.md"
    },
    {
      "basename": "refactoring guru",
      "path": "sources/refactoring guru.md"
    },
    {
      "basename": "java паттерны проектирования",
      "path": "base/notes/java паттерны проектирования.md"
    },
    {
      "basename": "refactoring guru",
      "path": "base/additions/conspectuses/refactoring guru.md"
    },
    {
      "basename": "Spring Boot",
      "path": "base/notes/Spring Boot.md"
    }
  ],
  "omittedPaths": [
    "\\.png$",
    "excalibrain"
  ],
  "omittedTags": [],
  "updateOn": "file-open",
  "omitBookmarks": false,
  "maxLength": 100
}