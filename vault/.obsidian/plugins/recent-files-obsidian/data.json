{
  "recentFiles": [
    {
      "basename": "Method area",
      "path": "base/notes/Method area.md"
    },
    {
      "basename": "JVM Stacks",
      "path": "base/notes/JVM Stacks.md"
    },
    {
      "basename": "fail-fast поведение",
      "path": "base/notes/fail-fast поведение.md"
    },
    {
      "basename": "frames",
      "path": "base/notes/frames.md"
    },
    {
      "basename": "DI",
      "path": "base/notes/DI.md"
    },
    {
      "basename": "exception в блоке инициализации",
      "path": "base/notes/exception в блоке инициализации.md"
    },
    {
      "basename": "AOP",
      "path": "base/notes/AOP.md"
    },
    {
      "basename": "constant pool и таблица символов",
      "path": "base/notes/constant pool и таблица символов.md"
    },
    {
      "basename": "Q10",
      "path": "base/notes/Q10.md"
    },
    {
      "basename": "CORBA и RMI",
      "path": "base/notes/CORBA и RMI.md"
    },
    {
      "basename": "anonymous inner class",
      "path": "base/notes/anonymous inner class.md"
    },
    {
      "basename": "HotSpot VM",
      "path": "base/notes/HotSpot VM.md"
    },
    {
      "basename": "Spring Framework",
      "path": "base/notes/Spring Framework.md"
    },
    {
      "basename": "heap vs stack",
      "path": "base/notes/heap vs stack.md"
    },
    {
      "basename": "java String как ключ для HashMap",
      "path": "base/notes/java String как ключ для HashMap.md"
    },
    {
      "basename": "java OutOfMemoryError",
      "path": "base/notes/java OutOfMemoryError.md"
    },
    {
      "basename": "java Native Method Stack",
      "path": "base/notes/java Native Method Stack.md"
    },
    {
      "basename": "java Run-time constant pool",
      "path": "base/notes/java Run-time constant pool.md"
    },
    {
      "basename": "java Heap",
      "path": "base/notes/java Heap.md"
    },
    {
      "basename": "java List",
      "path": "base/notes/java List.md"
    },
    {
      "basename": "java Reflection",
      "path": "base/notes/java Reflection.md"
    },
    {
      "basename": "java String pool",
      "path": "base/notes/java String pool.md"
    },
    {
      "basename": "java Hibernate",
      "path": "base/notes/java Hibernate.md"
    },
    {
      "basename": "java Constrained construction",
      "path": "base/notes/java Constrained construction.md"
    },
    {
      "basename": "java aop target",
      "path": "base/notes/java aop target.md"
    },
    {
      "basename": "java aop в java",
      "path": "base/notes/java aop в java.md"
    },
    {
      "basename": "java aop introduction",
      "path": "base/notes/java aop introduction.md"
    },
    {
      "basename": "java API gateway",
      "path": "base/notes/java API gateway.md"
    },
    {
      "basename": "java MVC",
      "path": "base/notes/java MVC.md"
    },
    {
      "basename": "java Service locator",
      "path": "base/notes/java Service locator.md"
    },
    {
      "basename": "java aop weaving",
      "path": "base/notes/java aop weaving.md"
    },
    {
      "basename": "java MVP",
      "path": "base/notes/java MVP.md"
    },
    {
      "basename": "java aop и сквозная функциональность",
      "path": "base/notes/java aop и сквозная функциональность.md"
    },
    {
      "basename": "java ContextLoadListener",
      "path": "base/notes/java ContextLoadListener.md"
    },
    {
      "basename": "java ApplicationContext",
      "path": "base/notes/java ApplicationContext.md"
    },
    {
      "basename": "java за что отвечает JVM",
      "path": "base/notes/java за что отвечает JVM.md"
    },
    {
      "basename": "java map",
      "path": "base/notes/java map.md"
    },
    {
      "basename": "java set",
      "path": "base/notes/java set.md"
    },
    {
      "basename": "java Стеки операндов",
      "path": "base/notes/java Стеки операндов.md"
    },
    {
      "basename": "java hashCode() у класса Point",
      "path": "base/notes/java hashCode() у класса Point.md"
    },
    {
      "basename": "java Динамическое связывание в контексте фрейма",
      "path": "base/notes/java Динамическое связывание в контексте фрейма.md"
    },
    {
      "basename": "java static",
      "path": "base/notes/java static.md"
    },
    {
      "basename": "java classpath",
      "path": "base/notes/java classpath.md"
    },
    {
      "basename": "java nested class",
      "path": "base/notes/java nested class.md"
    },
    {
      "basename": "java базовая иерархия загрузчиков",
      "path": "base/notes/java базовая иерархия загрузчиков.md"
    },
    {
      "basename": "java service discovery",
      "path": "base/notes/java service discovery.md"
    },
    {
      "basename": "java client-side service discovery",
      "path": "base/notes/java client-side service discovery.md"
    },
    {
      "basename": "java service registry",
      "path": "base/notes/java service registry.md"
    },
    {
      "basename": "java аналогия для понимания constant pool & symbol table",
      "path": "base/notes/java аналогия для понимания constant pool & symbol table.md"
    },
    {
      "basename": "java автоупаковка переменных требует",
      "path": "base/notes/java автоупаковка переменных требует.md"
    },
    {
      "basename": "java виды AOP",
      "path": "base/notes/java виды AOP.md"
    },
    {
      "basename": "java service mesh",
      "path": "base/notes/java service mesh.md"
    },
    {
      "basename": "java Паттерны отказоустойчивости микросервисов",
      "path": "base/notes/java Паттерны отказоустойчивости микросервисов.md"
    },
    {
      "basename": "java взаимодействие микросервисов",
      "path": "base/notes/java взаимодействие микросервисов.md"
    },
    {
      "basename": "java автоупаковка констант",
      "path": "base/notes/java автоупаковка констант.md"
    },
    {
      "basename": "java внедрение значений из property-файлов",
      "path": "base/notes/java внедрение значений из property-файлов.md"
    },
    {
      "basename": "java внедрение зависимости от другого бина",
      "path": "base/notes/java внедрение зависимости от другого бина.md"
    },
    {
      "basename": "java какие поля следует использовать при подсчете hashCode()",
      "path": "base/notes/java какие поля следует использовать при подсчете hashCode().md"
    },
    {
      "basename": "java консультация паблик для вкатунов 31.05",
      "path": "base/notes/java консультация паблик для вкатунов 31.05.md"
    },
    {
      "basename": "java особенности работы локальных переменных",
      "path": "base/notes/java особенности работы локальных переменных.md"
    },
    {
      "basename": "java правила переопределения Object.equals()",
      "path": "base/notes/java правила переопределения Object.equals().md"
    },
    {
      "basename": "java клонирование объектов",
      "path": "base/notes/java клонирование объектов.md"
    },
    {
      "basename": "java почему String неизменяемый",
      "path": "base/notes/java почему String неизменяемый.md"
    },
    {
      "basename": "java обмен сообщениями",
      "path": "base/notes/java обмен сообщениями.md"
    },
    {
      "basename": "java отличия интерфейса от абстрактного класса",
      "path": "base/notes/java отличия интерфейса от абстрактного класса.md"
    },
    {
      "basename": "java недостатки микросервисов",
      "path": "base/notes/java недостатки микросервисов.md"
    },
    {
      "basename": "java классы DAO",
      "path": "base/notes/java классы DAO.md"
    },
    {
      "basename": "java многоуровневая архитектура",
      "path": "base/notes/java многоуровневая архитектура.md"
    },
    {
      "basename": "java монолит",
      "path": "base/notes/java монолит.md"
    },
    {
      "basename": "java организация локальных переменных в памяти",
      "path": "base/notes/java организация локальных переменных в памяти.md"
    },
    {
      "basename": "java пример антипаттерна constrained constructor",
      "path": "base/notes/java пример антипаттерна constrained constructor.md"
    },
    {
      "basename": "java преимущества client-side service discovery",
      "path": "base/notes/java преимущества client-side service discovery.md"
    },
    {
      "basename": "java плюсы микросервисов",
      "path": "base/notes/java плюсы микросервисов.md"
    },
    {
      "basename": "java ключевые отличия полей от локальных переменных",
      "path": "base/notes/java ключевые отличия полей от локальных переменных.md"
    },
    {
      "basename": "java пример rest-контроллера",
      "path": "base/notes/java пример rest-контроллера.md"
    },
    {
      "basename": "java значение @Component и её производных",
      "path": "base/notes/java значение @Component и её производных.md"
    },
    {
      "basename": "java пример application.yaml",
      "path": "base/notes/java пример application.yaml.md"
    },
    {
      "basename": "java именование бинов",
      "path": "base/notes/java именование бинов.md"
    },
    {
      "basename": "java внедрение зависимостей через поля класса",
      "path": "base/notes/java внедрение зависимостей через поля класса.md"
    },
    {
      "basename": "java root-context.xml",
      "path": "base/notes/java root-context.xml.md"
    },
    {
      "basename": "java DispatcherServlet",
      "path": "base/notes/java DispatcherServlet.md"
    },
    {
      "basename": "java bean",
      "path": "base/notes/java bean.md"
    },
    {
      "basename": "динамическое создание в языках программирования",
      "path": "base/notes/динамическое создание в языках программирования.md"
    },
    {
      "basename": "байт-код",
      "path": "base/notes/байт-код.md"
    },
    {
      "basename": "ООП",
      "path": "base/notes/ООП.md"
    },
    {
      "basename": "old generation",
      "path": "base/notes/old generation.md"
    },
    {
      "basename": "агрегация и композиция в ООП",
      "path": "base/notes/агрегация и композиция в ООП.md"
    },
    {
      "basename": "static vs nonstatic",
      "path": "base/notes/static vs nonstatic.md"
    },
    {
      "basename": "абстракция",
      "path": "base/notes/абстракция.md"
    },
    {
      "basename": "minor collection",
      "path": "base/notes/minor collection.md"
    },
    {
      "basename": "young generation",
      "path": "base/notes/young generation.md"
    },
    {
      "basename": "виды сборщиков мусора",
      "path": "base/notes/виды сборщиков мусора.md"
    },
    {
      "basename": "естественность модели",
      "path": "base/notes/естественность модели.md"
    },
    {
      "basename": "значения переменных по умолчанию",
      "path": "base/notes/значения переменных по умолчанию.md"
    },
    {
      "basename": "Локальные переменные в JVM",
      "path": "base/notes/Локальные переменные в JVM.md"
    },
    {
      "basename": "блоки инициализации",
      "path": "base/notes/блоки инициализации.md"
    },
    {
      "basename": "динамическое или позднее связывание",
      "path": "base/notes/динамическое или позднее связывание.md"
    },
    {
      "basename": "динамическая загрузка классов в Java",
      "path": "base/notes/динамическая загрузка классов в Java.md"
    },
    {
      "basename": "try-with-resources",
      "path": "base/notes/try-with-resources.md"
    },
    {
      "basename": "доступ к private членам класса",
      "path": "base/notes/доступ к private членам класса.md"
    }
  ],
  "omittedPaths": [
    "\\.png$",
    "excalibrain"
  ],
  "omittedTags": [],
  "updateOn": "file-open",
  "omitBookmarks": false,
  "maxLength": 100
}